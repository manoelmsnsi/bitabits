<?php    class System{        private $_url;        private $_explode;        public $_controller;        public $_action;        public $_params;                public function __construct() {            $this->setUrl();            $this->setExplode();            $this->setController();            $this->setAction();            $this->setParams();        }                 private function setUrl(){                $_GET["url"] = (isset($_GET["url"]) ? $_GET["url"] : "Index/index_action");                $this->_url = $_GET["url"];              //  echo $_GET['url'];        }                private function setExplode(){            $this->_explode = explode( "/", $this->_url ) ;        }                private function setController(){            $this->_controller = $this->_explode[0];                   }                private function setAction(){            $ac = (!isset($this->_explode[1]) || $this->_explode[1] == null || $this->_explode[1] == "Index" ? "index_action" : $this->_explode[1]);            $this->_action = $ac;        }        private function setParams(){            unset($this->_explode[0],$this->_explode[1]);            if(empty(end($this->_explode))){                array_pop($this->_explode);            }                        $i = 0;            if(!empty($this->_explode)){                foreach ($this->_explode as $vals){                    if( $i % 2 == 0){                                            $ind[] = $vals;                        }else{                            $value[] = $vals;                        }                         $i++;                    }                               }else{                    $ind = array();                    $value = array();                            }            if( count ($ind) == count($value) && !empty($ind) && !empty($value)){                $this->_params = array_combine($ind, $value);                                    }else{                $this->_params = array();            }                   }                public function getParams( $nome = null){                         if ($nome!=null){                if(array_key_exists($nome, $this->_params)){                     return preg_replace("/[^0-9A-Za-z ]/", "",  $this->_params[ $nome ]);                                   }else{                    return false;                                }            }else{                return $this->_params;            }                    }                public function run(){             $controller_path = CONTROLLERS.$this->_controller."Controller.php";            if( !file_exists($controller_path)){                $redirect = new RedirectHelper();                $redirect->goToUrl("/Errors/error_404/erro/LC001/LC/".base64_encode($this->_url));             }else{                require_once ("$controller_path");                $app = new $this->_controller();                                if(!method_exists($app, $this->_action)){                    $redirect = new RedirectHelper();                    $redirect->goToUrl("/Errors/error_404/erro/LA001/". base64_encode($this->_url));                 }else{                    $action = $this->_action;                    $app->init();//Inicia INIT                     $app->$action();                }            }        }    }